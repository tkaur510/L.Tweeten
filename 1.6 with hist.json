{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {},
   "outputs": [],
   "source": [
    "health=pd.read_csv(\"/home/jovyan/EEP153_Materials/Project4/health_of_each_household.csv\")\n",
    "target_nutrients=pd.read_csv(\"/home/jovyan/EEP153_Materials/Project4/target_nutrients.csv\")\n",
    "households2=pd.read_csv(\"/home/jovyan/EEP153_Materials/Project4/households2.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[7,\n",
       " 1,\n",
       " 6,\n",
       " 9,\n",
       " 1,\n",
       " 1,\n",
       " 4,\n",
       " 3,\n",
       " 3,\n",
       " 4,\n",
       " 4,\n",
       " 4,\n",
       " 4,\n",
       " 4,\n",
       " 3,\n",
       " 5,\n",
       " 5,\n",
       " 4,\n",
       " 6,\n",
       " 1,\n",
       " 8,\n",
       " 2,\n",
       " 2,\n",
       " 9,\n",
       " 10,\n",
       " 5,\n",
       " 7,\n",
       " 4,\n",
       " 7,\n",
       " 1,\n",
       " 2,\n",
       " 7,\n",
       " 8,\n",
       " 6,\n",
       " 7,\n",
       " 10,\n",
       " 10,\n",
       " 7,\n",
       " 7,\n",
       " 5,\n",
       " 8,\n",
       " 3,\n",
       " 5,\n",
       " 7,\n",
       " 8,\n",
       " 1,\n",
       " 2,\n",
       " 3,\n",
       " 4,\n",
       " 4,\n",
       " 1,\n",
       " 2,\n",
       " 4,\n",
       " 4,\n",
       " 5,\n",
       " 3,\n",
       " 4,\n",
       " 4,\n",
       " 4,\n",
       " 5,\n",
       " 3,\n",
       " 3,\n",
       " 2,\n",
       " 9,\n",
       " 3,\n",
       " 3,\n",
       " 5,\n",
       " 3,\n",
       " 2,\n",
       " 4,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 3,\n",
       " 1,\n",
       " 1,\n",
       " 2,\n",
       " 3,\n",
       " 4,\n",
       " 6,\n",
       " 4,\n",
       " 5,\n",
       " 6,\n",
       " 5,\n",
       " 7,\n",
       " 10,\n",
       " 7,\n",
       " 9,\n",
       " 2,\n",
       " 4,\n",
       " 6,\n",
       " 9,\n",
       " 5,\n",
       " 7,\n",
       " 4,\n",
       " 2,\n",
       " 2,\n",
       " 3,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 3,\n",
       " 1,\n",
       " 5,\n",
       " 5,\n",
       " 4,\n",
       " 6,\n",
       " 3,\n",
       " 3,\n",
       " 1,\n",
       " 1,\n",
       " 7,\n",
       " 8,\n",
       " 5,\n",
       " 8,\n",
       " 5,\n",
       " 5,\n",
       " 4,\n",
       " 7,\n",
       " 4,\n",
       " 7,\n",
       " 6,\n",
       " 8,\n",
       " 5,\n",
       " 5,\n",
       " 7,\n",
       " 9,\n",
       " 3,\n",
       " 5,\n",
       " 2,\n",
       " 2,\n",
       " 5,\n",
       " 5,\n",
       " 3,\n",
       " 4,\n",
       " 6,\n",
       " 7,\n",
       " 8,\n",
       " 8,\n",
       " 2,\n",
       " 5,\n",
       " 7,\n",
       " 7,\n",
       " 2,\n",
       " 2,\n",
       " 3,\n",
       " 3,\n",
       " 6,\n",
       " 8,\n",
       " 9,\n",
       " 4,\n",
       " 3,\n",
       " 2,\n",
       " 2,\n",
       " 1,\n",
       " 5,\n",
       " 3,\n",
       " 8,\n",
       " 1,\n",
       " 4,\n",
       " 6,\n",
       " 2,\n",
       " 4,\n",
       " 5,\n",
       " 6,\n",
       " 7,\n",
       " 8,\n",
       " 9,\n",
       " 4,\n",
       " 6,\n",
       " 1,\n",
       " 1,\n",
       " 6,\n",
       " 8,\n",
       " 2,\n",
       " 3,\n",
       " 1,\n",
       " 8,\n",
       " 7,\n",
       " 2,\n",
       " 1,\n",
       " 2,\n",
       " 1,\n",
       " 5,\n",
       " 8,\n",
       " 10,\n",
       " 11,\n",
       " 4,\n",
       " 4,\n",
       " 1,\n",
       " 1,\n",
       " 2,\n",
       " 2,\n",
       " 7,\n",
       " 10,\n",
       " 6,\n",
       " 8,\n",
       " 10,\n",
       " 9,\n",
       " 1,\n",
       " 1,\n",
       " 4,\n",
       " 6,\n",
       " 2,\n",
       " 2,\n",
       " 7,\n",
       " 9,\n",
       " 8,\n",
       " 8,\n",
       " 5,\n",
       " 6,\n",
       " 5,\n",
       " 7,\n",
       " 6,\n",
       " 6,\n",
       " 5,\n",
       " 7,\n",
       " 5,\n",
       " 5,\n",
       " 2,\n",
       " 4,\n",
       " 5,\n",
       " 6,\n",
       " 3,\n",
       " 3,\n",
       " 1,\n",
       " 3,\n",
       " 5,\n",
       " 6,\n",
       " 7,\n",
       " 3,\n",
       " 4,\n",
       " 8,\n",
       " 2,\n",
       " 1,\n",
       " 1,\n",
       " 2,\n",
       " 6,\n",
       " 2,\n",
       " 5,\n",
       " 6,\n",
       " 2,\n",
       " 3,\n",
       " 4,\n",
       " 6,\n",
       " 4,\n",
       " 6,\n",
       " 2,\n",
       " 4,\n",
       " 1,\n",
       " 2,\n",
       " 2,\n",
       " 3,\n",
       " 4,\n",
       " 3,\n",
       " 3,\n",
       " 4,\n",
       " 3,\n",
       " 7,\n",
       " 9,\n",
       " 3,\n",
       " 4,\n",
       " 3,\n",
       " 4,\n",
       " 5,\n",
       " 1,\n",
       " 5,\n",
       " 7,\n",
       " 8,\n",
       " 9,\n",
       " 3,\n",
       " 3,\n",
       " 6,\n",
       " 1,\n",
       " 1,\n",
       " 2,\n",
       " 3,\n",
       " 1,\n",
       " 1,\n",
       " 2,\n",
       " 5,\n",
       " 4,\n",
       " 3,\n",
       " 3,\n",
       " 5,\n",
       " 1,\n",
       " 6,\n",
       " 4,\n",
       " 4,\n",
       " 5,\n",
       " 4,\n",
       " 4,\n",
       " 6,\n",
       " 8,\n",
       " 7,\n",
       " 1,\n",
       " 6,\n",
       " 9,\n",
       " 5,\n",
       " 7,\n",
       " 2,\n",
       " 4,\n",
       " 2,\n",
       " 2,\n",
       " 3,\n",
       " 3,\n",
       " 6,\n",
       " 1,\n",
       " 2,\n",
       " 2,\n",
       " 1,\n",
       " 5,\n",
       " 5,\n",
       " 1,\n",
       " 1,\n",
       " 4,\n",
       " 2,\n",
       " 2,\n",
       " 3,\n",
       " 2,\n",
       " 5,\n",
       " 8,\n",
       " 6,\n",
       " 7,\n",
       " 5,\n",
       " 7,\n",
       " 4,\n",
       " 7,\n",
       " 8,\n",
       " 8,\n",
       " 8,\n",
       " 10,\n",
       " 8,\n",
       " 11,\n",
       " 11,\n",
       " 4,\n",
       " 3,\n",
       " 4,\n",
       " 3,\n",
       " 4,\n",
       " 2,\n",
       " 3,\n",
       " 2,\n",
       " 2,\n",
       " 6,\n",
       " 7,\n",
       " 3,\n",
       " 6,\n",
       " 3,\n",
       " 3,\n",
       " 4,\n",
       " 3,\n",
       " 3,\n",
       " 4,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 4,\n",
       " 6,\n",
       " 5,\n",
       " 3,\n",
       " 3,\n",
       " 5,\n",
       " 8,\n",
       " 4,\n",
       " 9,\n",
       " 3,\n",
       " 5,\n",
       " 2,\n",
       " 2,\n",
       " 3,\n",
       " 3,\n",
       " 6,\n",
       " 8,\n",
       " 3,\n",
       " 4,\n",
       " 7,\n",
       " 10,\n",
       " 7,\n",
       " 10,\n",
       " 2,\n",
       " 2,\n",
       " 8,\n",
       " 8,\n",
       " 3,\n",
       " 4,\n",
       " 3,\n",
       " 4,\n",
       " 7,\n",
       " 7,\n",
       " 2,\n",
       " 2,\n",
       " 3,\n",
       " 2,\n",
       " 2,\n",
       " 6,\n",
       " 6,\n",
       " 3,\n",
       " 4,\n",
       " 5,\n",
       " 7,\n",
       " 1,\n",
       " 7,\n",
       " 6,\n",
       " 5,\n",
       " 5,\n",
       " 4,\n",
       " 4,\n",
       " 3,\n",
       " 4,\n",
       " 1,\n",
       " 6,\n",
       " 1,\n",
       " 4,\n",
       " 5,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 4,\n",
       " 5,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 4,\n",
       " 5,\n",
       " 2,\n",
       " 2,\n",
       " 4,\n",
       " 5,\n",
       " 1,\n",
       " 1,\n",
       " 3,\n",
       " 5,\n",
       " 5,\n",
       " 7,\n",
       " 7,\n",
       " 7,\n",
       " 3,\n",
       " 5,\n",
       " 5,\n",
       " 7,\n",
       " 3,\n",
       " 3,\n",
       " 5,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 5,\n",
       " 4,\n",
       " 5,\n",
       " 5,\n",
       " 7,\n",
       " 9,\n",
       " 1,\n",
       " 1,\n",
       " 5,\n",
       " 7,\n",
       " 1,\n",
       " 1,\n",
       " 6,\n",
       " 3,\n",
       " 4,\n",
       " 7,\n",
       " 7,\n",
       " 3,\n",
       " 3,\n",
       " 2,\n",
       " 4,\n",
       " 3,\n",
       " 4,\n",
       " 2,\n",
       " 4,\n",
       " 6,\n",
       " 6,\n",
       " 1,\n",
       " 2,\n",
       " 9,\n",
       " 10,\n",
       " 2,\n",
       " 2,\n",
       " 4,\n",
       " 5,\n",
       " 5,\n",
       " 4,\n",
       " 5,\n",
       " 2,\n",
       " 3,\n",
       " 4,\n",
       " 4,\n",
       " 8,\n",
       " 9,\n",
       " 2,\n",
       " 2,\n",
       " 3,\n",
       " 4,\n",
       " 3,\n",
       " 3,\n",
       " 5,\n",
       " 5,\n",
       " 7,\n",
       " 7,\n",
       " 4,\n",
       " 6,\n",
       " 7,\n",
       " 7,\n",
       " 5,\n",
       " 7,\n",
       " 5,\n",
       " 7,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 5,\n",
       " 8,\n",
       " 6,\n",
       " 2,\n",
       " 2,\n",
       " 5,\n",
       " 7,\n",
       " 3,\n",
       " 4,\n",
       " 5,\n",
       " 7,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 6,\n",
       " 6,\n",
       " 5,\n",
       " 7,\n",
       " 2,\n",
       " 2,\n",
       " 4,\n",
       " 3,\n",
       " 3,\n",
       " 4,\n",
       " 3,\n",
       " 5,\n",
       " 2,\n",
       " 2,\n",
       " 5,\n",
       " 9,\n",
       " 4,\n",
       " 6,\n",
       " 5,\n",
       " 8,\n",
       " 1,\n",
       " 2,\n",
       " 5,\n",
       " 6,\n",
       " 1,\n",
       " 6,\n",
       " 8,\n",
       " 7,\n",
       " 8,\n",
       " 1,\n",
       " 1,\n",
       " 4,\n",
       " 6,\n",
       " 4,\n",
       " 6,\n",
       " 4,\n",
       " 6,\n",
       " 7,\n",
       " 3,\n",
       " 4,\n",
       " 7,\n",
       " 4,\n",
       " 1,\n",
       " 7,\n",
       " 5,\n",
       " 7,\n",
       " 4,\n",
       " 5,\n",
       " 5,\n",
       " 2,\n",
       " 3,\n",
       " 6,\n",
       " 8,\n",
       " 3,\n",
       " 5,\n",
       " 6,\n",
       " 7,\n",
       " 1,\n",
       " 2,\n",
       " 6,\n",
       " 7,\n",
       " 2,\n",
       " 4,\n",
       " 4,\n",
       " 5,\n",
       " 6,\n",
       " 8,\n",
       " 3,\n",
       " 4,\n",
       " 1,\n",
       " 1,\n",
       " 2,\n",
       " 5,\n",
       " 8,\n",
       " 10,\n",
       " 2,\n",
       " 4,\n",
       " 2,\n",
       " 2,\n",
       " 5,\n",
       " 5,\n",
       " 8,\n",
       " 1,\n",
       " 4,\n",
       " 5,\n",
       " 3,\n",
       " 4,\n",
       " 4,\n",
       " 4,\n",
       " 1,\n",
       " 2,\n",
       " 3,\n",
       " 7,\n",
       " 5,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 3,\n",
       " 3,\n",
       " 6,\n",
       " 3,\n",
       " 1,\n",
       " 2,\n",
       " 4,\n",
       " 4,\n",
       " 7,\n",
       " 2,\n",
       " 5,\n",
       " 7,\n",
       " 4,\n",
       " 6,\n",
       " 2,\n",
       " 4,\n",
       " 7,\n",
       " 3,\n",
       " 3,\n",
       " 7,\n",
       " 13,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 2,\n",
       " 4,\n",
       " 3,\n",
       " 4,\n",
       " 2,\n",
       " 3,\n",
       " 2,\n",
       " 4,\n",
       " 7,\n",
       " 7,\n",
       " 2,\n",
       " 2,\n",
       " 7,\n",
       " 8,\n",
       " 7,\n",
       " 9,\n",
       " 4,\n",
       " 6,\n",
       " 3,\n",
       " 5,\n",
       " 4,\n",
       " 4,\n",
       " 2,\n",
       " 4,\n",
       " 3,\n",
       " 5,\n",
       " 2,\n",
       " 3,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 7,\n",
       " 5,\n",
       " 4,\n",
       " 5,\n",
       " 3,\n",
       " 4,\n",
       " 5,\n",
       " 4,\n",
       " 3,\n",
       " 4,\n",
       " 7,\n",
       " 5,\n",
       " 7,\n",
       " 5,\n",
       " 9,\n",
       " 7,\n",
       " 6,\n",
       " 3,\n",
       " 3,\n",
       " 2,\n",
       " 5,\n",
       " 2,\n",
       " 2,\n",
       " 5,\n",
       " 6,\n",
       " 3,\n",
       " 4,\n",
       " 4,\n",
       " 6,\n",
       " 7,\n",
       " 7,\n",
       " 8,\n",
       " 2,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 2,\n",
       " 2,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 8,\n",
       " 14,\n",
       " 5,\n",
       " 5,\n",
       " 6,\n",
       " 6,\n",
       " 2,\n",
       " 4,\n",
       " 3,\n",
       " 5,\n",
       " 1,\n",
       " 1,\n",
       " 2,\n",
       " 2,\n",
       " 1,\n",
       " 4,\n",
       " 6,\n",
       " 7,\n",
       " 5,\n",
       " 5,\n",
       " 6,\n",
       " 4,\n",
       " 8,\n",
       " 8,\n",
       " 8,\n",
       " 8,\n",
       " 8,\n",
       " 6,\n",
       " 8,\n",
       " 6,\n",
       " 2,\n",
       " 4,\n",
       " 5,\n",
       " 4,\n",
       " 4,\n",
       " 2,\n",
       " 2,\n",
       " 2,\n",
       " 5,\n",
       " 5,\n",
       " 2,\n",
       " 2,\n",
       " 4,\n",
       " 7,\n",
       " 10,\n",
       " 6,\n",
       " 9,\n",
       " 8,\n",
       " 9,\n",
       " 1,\n",
       " 6,\n",
       " 9,\n",
       " 1,\n",
       " 5,\n",
       " 6,\n",
       " 5,\n",
       " 8,\n",
       " 3,\n",
       " 3,\n",
       " 2,\n",
       " 1,\n",
       " 4,\n",
       " 5,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 2,\n",
       " 3,\n",
       " 4,\n",
       " 4,\n",
       " 4,\n",
       " 6,\n",
       " 6,\n",
       " 6,\n",
       " 1,\n",
       " 4,\n",
       " 4,\n",
       " 5,\n",
       " 6,\n",
       " 10,\n",
       " 4,\n",
       " 7,\n",
       " 3,\n",
       " 5,\n",
       " 5,\n",
       " 8,\n",
       " 3,\n",
       " 5,\n",
       " 6,\n",
       " 4,\n",
       " 7,\n",
       " 2,\n",
       " 5,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 7,\n",
       " 10,\n",
       " 8,\n",
       " 10,\n",
       " 2,\n",
       " 5,\n",
       " 6,\n",
       " 9,\n",
       " 4,\n",
       " 4,\n",
       " 2,\n",
       " 7,\n",
       " 3,\n",
       " 2,\n",
       " 4,\n",
       " 2,\n",
       " 6,\n",
       " 8,\n",
       " 5,\n",
       " 6,\n",
       " 2,\n",
       " 4,\n",
       " 4,\n",
       " 2,\n",
       " 2,\n",
       " 1,\n",
       " 5,\n",
       " 6,\n",
       " 4,\n",
       " 4,\n",
       " 1,\n",
       " 6,\n",
       " 6,\n",
       " 5,\n",
       " 8,\n",
       " 7,\n",
       " 10,\n",
       " 2,\n",
       " 4,\n",
       " 3,\n",
       " 6,\n",
       " 2,\n",
       " 2,\n",
       " 3,\n",
       " 4,\n",
       " 3,\n",
       " 4,\n",
       " 6,\n",
       " 8,\n",
       " 4,\n",
       " 6,\n",
       " 6,\n",
       " 2,\n",
       " 4,\n",
       " 7,\n",
       " 4,\n",
       " 5,\n",
       " 3,\n",
       " 4,\n",
       " 3,\n",
       " 4,\n",
       " 10,\n",
       " 3,\n",
       " 9,\n",
       " 2,\n",
       " 5,\n",
       " 4,\n",
       " 3,\n",
       " 1,\n",
       " 2,\n",
       " 4,\n",
       " 3,\n",
       " 3,\n",
       " 3,\n",
       " 1,\n",
       " 2,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 3,\n",
       " 3,\n",
       " 10,\n",
       " 3,\n",
       " 4,\n",
       " 6,\n",
       " 4,\n",
       " 4,\n",
       " 5,\n",
       " 1,\n",
       " 2,\n",
       " 3,\n",
       " 4,\n",
       " 4,\n",
       " 9,\n",
       " 10,\n",
       " 8,\n",
       " 12,\n",
       " 5,\n",
       " 12,\n",
       " 6,\n",
       " 7,\n",
       " 3,\n",
       " 6,\n",
       " 5,\n",
       " 7,\n",
       " 5,\n",
       " 8,\n",
       " 5,\n",
       " 7,\n",
       " 2,\n",
       " 4,\n",
       " 5,\n",
       " 7,\n",
       " 2,\n",
       " 1,\n",
       " 4,\n",
       " 4,\n",
       " 7,\n",
       " 8,\n",
       " 6,\n",
       " 6,\n",
       " 5,\n",
       " 6,\n",
       " 8,\n",
       " 8,\n",
       " 8,\n",
       " 9,\n",
       " 8,\n",
       " 9,\n",
       " 6,\n",
       " 8,\n",
       " 10,\n",
       " 12,\n",
       " 2,\n",
       " 2,\n",
       " 9,\n",
       " 9,\n",
       " 2,\n",
       " 2,\n",
       " 5,\n",
       " 7,\n",
       " 4,\n",
       " 7,\n",
       " 2,\n",
       " 4,\n",
       " 5,\n",
       " 2,\n",
       " 3,\n",
       " 3,\n",
       " 1,\n",
       " 1,\n",
       " 1,\n",
       " 3,\n",
       " 3,\n",
       " 2,\n",
       " 1,\n",
       " 2,\n",
       " 1,\n",
       " 2,\n",
       " 3,\n",
       " 6,\n",
       " 6,\n",
       " 8,\n",
       " 8,\n",
       " 6,\n",
       " 7,\n",
       " 6,\n",
       " 4,\n",
       " 5,\n",
       " 3,\n",
       " 2,\n",
       " 4,\n",
       " 6,\n",
       " 1,\n",
       " 2,\n",
       " ...]"
      ]
     },
     "execution_count": 50,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "households3=households2.drop(\"ID\", axis=1)\n",
    "number_in_house=[]\n",
    "for i in range(6712):\n",
    "    number=sum(households3.loc[i])\n",
    "    number_in_house.append(number)\n",
    "number_in_house"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Unnamed: 0</th>\n",
       "      <th>t</th>\n",
       "      <th>j</th>\n",
       "      <th>Field Pea</th>\n",
       "      <th>Banana</th>\n",
       "      <th>Barley</th>\n",
       "      <th>Beef</th>\n",
       "      <th>Beer</th>\n",
       "      <th>Boye/Yam</th>\n",
       "      <th>Bula</th>\n",
       "      <th>...</th>\n",
       "      <th>Salt</th>\n",
       "      <th>Soft drinks/Soda</th>\n",
       "      <th>Sorghum</th>\n",
       "      <th>Sugar</th>\n",
       "      <th>Sweet potato</th>\n",
       "      <th>Tea</th>\n",
       "      <th>Teff</th>\n",
       "      <th>Tomato</th>\n",
       "      <th>Wheat</th>\n",
       "      <th>ID</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>2011</td>\n",
       "      <td>1.010102e+12</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>2.50</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>5.022882e+08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>2015</td>\n",
       "      <td>1.010102e+12</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>5.012911e+08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>2011</td>\n",
       "      <td>1.010102e+12</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1.25</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>5.022882e+08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>2015</td>\n",
       "      <td>1.010102e+12</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.5</td>\n",
       "      <td>0.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>5.012911e+08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>2011</td>\n",
       "      <td>1.010102e+12</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1.25</td>\n",
       "      <td>0.0</td>\n",
       "      <td>40.00</td>\n",
       "      <td>2.5</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>5.022882e+08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>5</td>\n",
       "      <td>2013</td>\n",
       "      <td>1.010102e+12</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>50.00</td>\n",
       "      <td>5.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>5.017892e+08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>6</td>\n",
       "      <td>2011</td>\n",
       "      <td>1.010102e+12</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1.25</td>\n",
       "      <td>0.0</td>\n",
       "      <td>210.00</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>5.022882e+08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>7</td>\n",
       "      <td>2013</td>\n",
       "      <td>1.010102e+12</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>2.50</td>\n",
       "      <td>0.0</td>\n",
       "      <td>200.00</td>\n",
       "      <td>5.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>5.017892e+08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>8</td>\n",
       "      <td>2015</td>\n",
       "      <td>1.010102e+12</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>5.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>200.00</td>\n",
       "      <td>5.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>5.012911e+08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>9</td>\n",
       "      <td>2011</td>\n",
       "      <td>1.010102e+12</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1.25</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>5.022882e+08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>10</td>\n",
       "      <td>2013</td>\n",
       "      <td>1.010102e+12</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>2.50</td>\n",
       "      <td>0.0</td>\n",
       "      <td>50.00</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>5.017892e+08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>11</td>\n",
       "      <td>2011</td>\n",
       "      <td>1.010102e+12</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>2.50</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>5.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>5.022882e+08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>12</td>\n",
       "      <td>2013</td>\n",
       "      <td>1.010102e+12</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>2.50</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>5.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>5.017892e+08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>13</td>\n",
       "      <td>2011</td>\n",
       "      <td>1.010102e+12</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1.25</td>\n",
       "      <td>0.0</td>\n",
       "      <td>100.00</td>\n",
       "      <td>5.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>5.022882e+08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>14</td>\n",
       "      <td>2011</td>\n",
       "      <td>1.010102e+12</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>2.50</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>5.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>5.022882e+08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>15</td>\n",
       "      <td>2013</td>\n",
       "      <td>1.010102e+12</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>2.50</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>5.017892e+08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>16</td>\n",
       "      <td>2015</td>\n",
       "      <td>1.010102e+12</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>2.50</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>5.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>5.012911e+08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>17</td>\n",
       "      <td>2011</td>\n",
       "      <td>1.010102e+12</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1.25</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>5.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>5.022882e+08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>18</td>\n",
       "      <td>2013</td>\n",
       "      <td>1.010102e+12</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>2.50</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>5.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>5.017892e+08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>19</td>\n",
       "      <td>2011</td>\n",
       "      <td>1.010102e+12</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1.25</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>5.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>5.022882e+08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>20</td>\n",
       "      <td>2013</td>\n",
       "      <td>1.010102e+12</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>5.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>15.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>5.017892e+08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>21</td>\n",
       "      <td>2011</td>\n",
       "      <td>1.010102e+12</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1.20</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>5.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>5.022882e+08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>22</td>\n",
       "      <td>2011</td>\n",
       "      <td>1.010102e+12</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>2.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>50.00</td>\n",
       "      <td>5.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>5.022882e+08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>23</td>\n",
       "      <td>2011</td>\n",
       "      <td>1.010201e+12</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>2.50</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>2.5</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>5.023378e+08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>24</td>\n",
       "      <td>2013</td>\n",
       "      <td>1.010201e+12</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>9.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>5.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>5.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>5.018387e+08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>25</td>\n",
       "      <td>2011</td>\n",
       "      <td>1.010201e+12</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>2.50</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>5.023378e+08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>26</td>\n",
       "      <td>2013</td>\n",
       "      <td>1.010201e+12</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>10.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>5.018387e+08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>27</td>\n",
       "      <td>2011</td>\n",
       "      <td>1.010201e+12</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>2.50</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>2.5</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>5.023378e+08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>28</td>\n",
       "      <td>2013</td>\n",
       "      <td>1.010201e+12</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>10.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>5.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>5.018387e+08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>29</td>\n",
       "      <td>2011</td>\n",
       "      <td>1.010201e+12</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1.25</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>2.5</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>5.023378e+08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6682</th>\n",
       "      <td>6682</td>\n",
       "      <td>2013</td>\n",
       "      <td>1.501020e+13</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>2.50</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>7.456633e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6683</th>\n",
       "      <td>6683</td>\n",
       "      <td>2011</td>\n",
       "      <td>1.501020e+13</td>\n",
       "      <td>0.0</td>\n",
       "      <td>20.0</td>\n",
       "      <td>15.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>2.50</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>12.5</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>20.00</td>\n",
       "      <td>7.464049e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6684</th>\n",
       "      <td>6684</td>\n",
       "      <td>2011</td>\n",
       "      <td>1.501020e+13</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>10.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>17.5</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>7.464049e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6685</th>\n",
       "      <td>6685</td>\n",
       "      <td>2013</td>\n",
       "      <td>1.501020e+13</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>5.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>20.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>7.456633e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6686</th>\n",
       "      <td>6686</td>\n",
       "      <td>2011</td>\n",
       "      <td>1.501020e+13</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>2.50</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>7.464049e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6687</th>\n",
       "      <td>6687</td>\n",
       "      <td>2013</td>\n",
       "      <td>1.501020e+13</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>2.50</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>7.456633e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6688</th>\n",
       "      <td>6688</td>\n",
       "      <td>2015</td>\n",
       "      <td>1.501020e+13</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>2.5</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>7.449232e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6689</th>\n",
       "      <td>6689</td>\n",
       "      <td>2011</td>\n",
       "      <td>1.501020e+13</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>5.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>7.464049e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6690</th>\n",
       "      <td>6690</td>\n",
       "      <td>2013</td>\n",
       "      <td>1.501020e+13</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>2.50</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>7.456633e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6691</th>\n",
       "      <td>6691</td>\n",
       "      <td>2011</td>\n",
       "      <td>1.501020e+13</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>5.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>15.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>7.464049e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6692</th>\n",
       "      <td>6692</td>\n",
       "      <td>2013</td>\n",
       "      <td>1.501020e+13</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>2.50</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>7.456633e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6693</th>\n",
       "      <td>6693</td>\n",
       "      <td>2015</td>\n",
       "      <td>1.501020e+13</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>2.50</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>7.449232e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6694</th>\n",
       "      <td>6694</td>\n",
       "      <td>2011</td>\n",
       "      <td>1.501020e+13</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>2.50</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>7.464049e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6695</th>\n",
       "      <td>6695</td>\n",
       "      <td>2013</td>\n",
       "      <td>1.501020e+13</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>2.50</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>7.456633e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6696</th>\n",
       "      <td>6696</td>\n",
       "      <td>2015</td>\n",
       "      <td>1.501020e+13</td>\n",
       "      <td>0.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>2.50</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>7.449232e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6697</th>\n",
       "      <td>6697</td>\n",
       "      <td>2011</td>\n",
       "      <td>1.501020e+13</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>2.50</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>5.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>7.464049e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6698</th>\n",
       "      <td>6698</td>\n",
       "      <td>2013</td>\n",
       "      <td>1.501020e+13</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>2.50</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>7.456633e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6699</th>\n",
       "      <td>6699</td>\n",
       "      <td>2015</td>\n",
       "      <td>1.501020e+13</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>2.50</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>7.449232e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6700</th>\n",
       "      <td>6700</td>\n",
       "      <td>2011</td>\n",
       "      <td>1.501020e+13</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>2.50</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>15.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>7.464049e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6701</th>\n",
       "      <td>6701</td>\n",
       "      <td>2011</td>\n",
       "      <td>1.501020e+13</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>2.50</td>\n",
       "      <td>0.0</td>\n",
       "      <td>84.00</td>\n",
       "      <td>70.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>224.00</td>\n",
       "      <td>7.464049e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6702</th>\n",
       "      <td>6702</td>\n",
       "      <td>2011</td>\n",
       "      <td>1.501020e+13</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>5.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>20.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>7.464049e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6703</th>\n",
       "      <td>6703</td>\n",
       "      <td>2011</td>\n",
       "      <td>1.501020e+13</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>5.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>84.00</td>\n",
       "      <td>35.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>252.00</td>\n",
       "      <td>7.464049e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6704</th>\n",
       "      <td>6704</td>\n",
       "      <td>2013</td>\n",
       "      <td>1.501020e+13</td>\n",
       "      <td>0.0</td>\n",
       "      <td>20.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>2.50</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>20.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>7.456633e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6705</th>\n",
       "      <td>6705</td>\n",
       "      <td>2013</td>\n",
       "      <td>1.501020e+13</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>20.00</td>\n",
       "      <td>20.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>7.456633e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6706</th>\n",
       "      <td>6706</td>\n",
       "      <td>2011</td>\n",
       "      <td>1.501020e+13</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>2.50</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>20.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>7.464049e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6707</th>\n",
       "      <td>6707</td>\n",
       "      <td>2011</td>\n",
       "      <td>1.501020e+13</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>5.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>56.25</td>\n",
       "      <td>17.1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>56.25</td>\n",
       "      <td>7.464049e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6708</th>\n",
       "      <td>6708</td>\n",
       "      <td>2013</td>\n",
       "      <td>1.501020e+13</td>\n",
       "      <td>0.0</td>\n",
       "      <td>20.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>2.50</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>40.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>7.456633e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6709</th>\n",
       "      <td>6709</td>\n",
       "      <td>2011</td>\n",
       "      <td>1.501020e+13</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>2.50</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>20.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>7.464049e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6710</th>\n",
       "      <td>6710</td>\n",
       "      <td>2013</td>\n",
       "      <td>1.501020e+13</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>2.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>20.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>7.456633e+09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6711</th>\n",
       "      <td>6711</td>\n",
       "      <td>2013</td>\n",
       "      <td>1.501020e+13</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>2.50</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>20.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>7.456633e+09</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>6712 rows × 51 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      Unnamed: 0     t             j  Field Pea  Banana  Barley  Beef  Beer  \\\n",
       "0              0  2011  1.010102e+12        0.0     0.0     0.0   0.0   0.0   \n",
       "1              1  2015  1.010102e+12        0.0     0.0     0.0   0.0   0.0   \n",
       "2              2  2011  1.010102e+12        0.0     0.0     0.0   0.0   0.0   \n",
       "3              3  2015  1.010102e+12        0.0     0.0     0.0   0.0   0.0   \n",
       "4              4  2011  1.010102e+12        0.0     0.0     0.0   0.0   0.0   \n",
       "5              5  2013  1.010102e+12        0.0     0.0     0.0   0.0   0.0   \n",
       "6              6  2011  1.010102e+12        0.0     0.0     0.0   0.0   0.0   \n",
       "7              7  2013  1.010102e+12        0.0     0.0     0.0   0.0   0.0   \n",
       "8              8  2015  1.010102e+12        0.0     0.0     0.0   0.0   0.0   \n",
       "9              9  2011  1.010102e+12        0.0     0.0     0.0   0.0   0.0   \n",
       "10            10  2013  1.010102e+12        0.0     0.0     0.0   0.0   0.0   \n",
       "11            11  2011  1.010102e+12        0.0     0.0     0.0   0.0   0.0   \n",
       "12            12  2013  1.010102e+12        0.0     0.0     0.0   0.0   0.0   \n",
       "13            13  2011  1.010102e+12        0.0     0.0     0.0   0.0   0.0   \n",
       "14            14  2011  1.010102e+12        0.0     0.0     0.0   0.0   0.0   \n",
       "15            15  2013  1.010102e+12        0.0     0.0     0.0   0.0   0.0   \n",
       "16            16  2015  1.010102e+12        0.0     0.0     0.0  10.0   0.0   \n",
       "17            17  2011  1.010102e+12        0.0     0.0     0.0   0.0   0.0   \n",
       "18            18  2013  1.010102e+12        0.0     0.0     0.0   0.0   0.0   \n",
       "19            19  2011  1.010102e+12        0.0     0.0     0.0   0.0   0.0   \n",
       "20            20  2013  1.010102e+12        0.0     0.0     0.0   0.0   0.0   \n",
       "21            21  2011  1.010102e+12        0.0     0.0     0.0   0.0   0.0   \n",
       "22            22  2011  1.010102e+12        0.0     0.0     0.0   0.0   0.0   \n",
       "23            23  2011  1.010201e+12        0.0     0.0     0.0   0.0   0.0   \n",
       "24            24  2013  1.010201e+12        0.0     0.0     9.0   0.0   0.0   \n",
       "25            25  2011  1.010201e+12        0.0     0.0     0.0   0.0   0.0   \n",
       "26            26  2013  1.010201e+12        0.0     0.0     0.0   0.0   0.0   \n",
       "27            27  2011  1.010201e+12        0.0     0.0     0.0   0.0   0.0   \n",
       "28            28  2013  1.010201e+12        0.0     0.0     0.0   0.0   0.0   \n",
       "29            29  2011  1.010201e+12        0.0     0.0     0.0   0.0   0.0   \n",
       "...          ...   ...           ...        ...     ...     ...   ...   ...   \n",
       "6682        6682  2013  1.501020e+13        0.0     0.0     0.0   0.0   0.0   \n",
       "6683        6683  2011  1.501020e+13        0.0    20.0    15.0   0.0   0.0   \n",
       "6684        6684  2011  1.501020e+13        0.0     0.0     0.0   0.0   0.0   \n",
       "6685        6685  2013  1.501020e+13        0.0     0.0     0.0   0.0   0.0   \n",
       "6686        6686  2011  1.501020e+13        0.0     0.0     0.0   0.0   0.0   \n",
       "6687        6687  2013  1.501020e+13        0.0     0.0     0.0   0.0   0.0   \n",
       "6688        6688  2015  1.501020e+13        0.0     0.0     0.0   0.0   0.0   \n",
       "6689        6689  2011  1.501020e+13        0.0     0.0     0.0   0.0   0.0   \n",
       "6690        6690  2013  1.501020e+13        0.0     0.0     0.0   0.0   0.0   \n",
       "6691        6691  2011  1.501020e+13        0.0     0.0     0.0   0.0   0.0   \n",
       "6692        6692  2013  1.501020e+13        0.0     0.0     0.0   0.0   0.0   \n",
       "6693        6693  2015  1.501020e+13        0.0     0.0     0.0   0.0   0.0   \n",
       "6694        6694  2011  1.501020e+13        0.0     0.0     0.0   0.0   0.0   \n",
       "6695        6695  2013  1.501020e+13        0.0     0.0     0.0   0.0   0.0   \n",
       "6696        6696  2015  1.501020e+13        0.0     5.0     0.0   0.0   0.0   \n",
       "6697        6697  2011  1.501020e+13        0.0     0.0     0.0   0.0   0.0   \n",
       "6698        6698  2013  1.501020e+13        0.0     0.0     0.0   0.0   0.0   \n",
       "6699        6699  2015  1.501020e+13        0.0     0.0     0.0   0.0   0.0   \n",
       "6700        6700  2011  1.501020e+13        0.0     0.0     0.0   0.0   0.0   \n",
       "6701        6701  2011  1.501020e+13        0.0     0.0     0.0   0.0   0.0   \n",
       "6702        6702  2011  1.501020e+13        0.0     0.0     0.0   0.0   0.0   \n",
       "6703        6703  2011  1.501020e+13        0.0     0.0     0.0   0.0   0.0   \n",
       "6704        6704  2013  1.501020e+13        0.0    20.0     0.0   0.0   0.0   \n",
       "6705        6705  2013  1.501020e+13        0.0     0.0     0.0   0.0   0.0   \n",
       "6706        6706  2011  1.501020e+13        0.0     0.0     0.0   0.0   0.0   \n",
       "6707        6707  2011  1.501020e+13        0.0     0.0     0.0   0.0   0.0   \n",
       "6708        6708  2013  1.501020e+13        0.0    20.0     0.0   0.0   0.0   \n",
       "6709        6709  2011  1.501020e+13        0.0     0.0     0.0   0.0   0.0   \n",
       "6710        6710  2013  1.501020e+13        0.0     0.0     0.0   0.0   0.0   \n",
       "6711        6711  2013  1.501020e+13        0.0     0.0     0.0   0.0   0.0   \n",
       "\n",
       "      Boye/Yam  Bula      ...        Salt  Soft drinks/Soda  Sorghum  Sugar  \\\n",
       "0          0.0   0.0      ...        2.50               0.0     0.00   10.0   \n",
       "1          0.0   0.0      ...        0.00               0.0     0.00    0.0   \n",
       "2          0.0   0.0      ...        1.25               0.0     0.00    0.0   \n",
       "3          0.0   0.0      ...        0.00               0.0     0.00    0.0   \n",
       "4          0.0   0.0      ...        1.25               0.0    40.00    2.5   \n",
       "5          0.0   0.0      ...        1.00               0.0    50.00    5.0   \n",
       "6          0.0   0.0      ...        1.25               0.0   210.00   10.0   \n",
       "7          0.0   0.0      ...        2.50               0.0   200.00    5.0   \n",
       "8          0.0   0.0      ...        5.00               0.0   200.00    5.0   \n",
       "9          0.0   0.0      ...        1.25               0.0     0.00   10.0   \n",
       "10         0.0   0.0      ...        2.50               0.0    50.00   10.0   \n",
       "11         0.0   0.0      ...        2.50               0.0     0.00    5.0   \n",
       "12         0.0   0.0      ...        2.50               0.0     0.00    5.0   \n",
       "13         0.0   0.0      ...        1.25               0.0   100.00    5.0   \n",
       "14         0.0   0.0      ...        2.50               0.0     0.00    5.0   \n",
       "15         0.0   0.0      ...        2.50               0.0     0.00   10.0   \n",
       "16         0.0   0.0      ...        2.50               3.0     0.00    5.0   \n",
       "17         0.0   0.0      ...        1.25               0.0     0.00    5.0   \n",
       "18         0.0   0.0      ...        2.50               0.0     0.00    5.0   \n",
       "19         0.0   0.0      ...        1.25               0.0     0.00    5.0   \n",
       "20         0.0   0.0      ...        5.00               0.0     0.00   15.0   \n",
       "21         0.0   0.0      ...        1.20               0.0     0.00    5.0   \n",
       "22         0.0   0.0      ...        2.00               0.0    50.00    5.0   \n",
       "23         0.0   0.0      ...        2.50               0.0     0.00    2.5   \n",
       "24         0.0   0.0      ...        5.00               0.0     0.00    5.0   \n",
       "25         0.0   0.0      ...        2.50               0.0     0.00    0.0   \n",
       "26         0.0   0.0      ...       10.00               0.0     0.00    0.0   \n",
       "27         0.0   0.0      ...        2.50               0.0     0.00    2.5   \n",
       "28         0.0   0.0      ...       10.00               0.0     0.00    5.0   \n",
       "29         0.0   0.0      ...        1.25               0.0     0.00    2.5   \n",
       "...        ...   ...      ...         ...               ...      ...    ...   \n",
       "6682       0.0   0.0      ...        2.50               0.0     0.00   10.0   \n",
       "6683       0.0   0.0      ...        2.50               0.0     0.00   12.5   \n",
       "6684       0.0   0.0      ...       10.00               0.0     0.00   17.5   \n",
       "6685       0.0   0.0      ...        5.00               0.0     0.00   20.0   \n",
       "6686       0.0   0.0      ...        2.50               0.0     0.00    0.0   \n",
       "6687       0.0   0.0      ...        2.50               0.0     0.00    0.0   \n",
       "6688       0.0   0.0      ...        0.00               0.0     0.00    2.5   \n",
       "6689       0.0   0.0      ...        5.00               0.0     0.00   10.0   \n",
       "6690       0.0   0.0      ...        2.50               0.0     0.00    0.0   \n",
       "6691       0.0   0.0      ...        5.00               0.0     0.00   15.0   \n",
       "6692       0.0   0.0      ...        2.50               0.0     0.00    0.0   \n",
       "6693       0.0   0.0      ...        2.50               0.0     0.00   10.0   \n",
       "6694       0.0   0.0      ...        2.50               0.0     0.00    0.0   \n",
       "6695       0.0   0.0      ...        2.50               0.0     0.00    0.0   \n",
       "6696       0.0   0.0      ...        2.50               0.0     0.00   10.0   \n",
       "6697       0.0   0.0      ...        2.50               0.0     0.00    5.0   \n",
       "6698       0.0   0.0      ...        2.50               0.0     0.00    0.0   \n",
       "6699       0.0   0.0      ...        2.50               0.0     0.00    0.0   \n",
       "6700       0.0   0.0      ...        2.50               0.0     0.00   15.0   \n",
       "6701       0.0   0.0      ...        2.50               0.0    84.00   70.0   \n",
       "6702       0.0   0.0      ...        5.00               0.0     0.00   20.0   \n",
       "6703       0.0   0.0      ...        5.00               0.0    84.00   35.0   \n",
       "6704       0.0   0.0      ...        2.50               0.0     0.00   20.0   \n",
       "6705       0.0   0.0      ...        1.00               0.0    20.00   20.0   \n",
       "6706       0.0   0.0      ...        2.50               0.0     0.00   20.0   \n",
       "6707       0.0   0.0      ...        5.00               0.0    56.25   17.1   \n",
       "6708       0.0   0.0      ...        2.50               0.0     0.00   40.0   \n",
       "6709       0.0   0.0      ...        2.50               0.0     0.00   20.0   \n",
       "6710       0.0   0.0      ...        2.00               0.0     0.00   20.0   \n",
       "6711       0.0   0.0      ...        2.50               0.0     0.00   20.0   \n",
       "\n",
       "      Sweet potato  Tea  Teff  Tomato   Wheat            ID  \n",
       "0              0.0  0.0   0.0     0.0    0.00  5.022882e+08  \n",
       "1              0.0  0.0   0.0     5.0    0.00  5.012911e+08  \n",
       "2              0.0  0.0   0.0     0.0    0.00  5.022882e+08  \n",
       "3              0.0  2.5   0.0    10.0    0.00  5.012911e+08  \n",
       "4              0.0  0.0   0.0     0.0    0.00  5.022882e+08  \n",
       "5              0.0  0.0   0.0     0.0    0.00  5.017892e+08  \n",
       "6              0.0  0.0   0.0     0.0    0.00  5.022882e+08  \n",
       "7              0.0  0.0   0.0     0.0    0.00  5.017892e+08  \n",
       "8              0.0  0.0   0.0    10.0    0.00  5.012911e+08  \n",
       "9              0.0  0.0   0.0     0.0    0.00  5.022882e+08  \n",
       "10             0.0  0.0   0.0     0.0    0.00  5.017892e+08  \n",
       "11             0.0  0.0   0.0     0.0    0.00  5.022882e+08  \n",
       "12             0.0  0.0   0.0     0.0    0.00  5.017892e+08  \n",
       "13             0.0  0.0   0.0     0.0    0.00  5.022882e+08  \n",
       "14             0.0  0.0   0.0     0.0    0.00  5.022882e+08  \n",
       "15             0.0  0.0   0.0     0.0    0.00  5.017892e+08  \n",
       "16             0.0  0.0   0.0     5.0    0.00  5.012911e+08  \n",
       "17             0.0  0.0   0.0     0.0    0.00  5.022882e+08  \n",
       "18             0.0  0.0   0.0     0.0    0.00  5.017892e+08  \n",
       "19             0.0  0.0   0.0     0.0    0.00  5.022882e+08  \n",
       "20             0.0  0.0   0.0     0.0    0.00  5.017892e+08  \n",
       "21             0.0  0.0   0.0     0.0    0.00  5.022882e+08  \n",
       "22             0.0  0.0   0.0     0.0    0.00  5.022882e+08  \n",
       "23             0.0  0.0   0.0     0.0    0.00  5.023378e+08  \n",
       "24             0.0  0.0   0.0     0.0    0.00  5.018387e+08  \n",
       "25             0.0  0.0   0.0     0.0    0.00  5.023378e+08  \n",
       "26             0.0  0.0   0.0     0.0    0.00  5.018387e+08  \n",
       "27             0.0  0.0   0.0     0.0    0.00  5.023378e+08  \n",
       "28             0.0  0.0   0.0     0.0    0.00  5.018387e+08  \n",
       "29             0.0  0.0   0.0     0.0    0.00  5.023378e+08  \n",
       "...            ...  ...   ...     ...     ...           ...  \n",
       "6682           0.0  0.0   0.0     0.0    0.00  7.456633e+09  \n",
       "6683           0.0  0.0   0.0     0.0   20.00  7.464049e+09  \n",
       "6684           0.0  0.0   0.0     0.0    0.00  7.464049e+09  \n",
       "6685           0.0  0.0   0.0     0.0    0.00  7.456633e+09  \n",
       "6686           0.0  0.0   0.0     0.0    0.00  7.464049e+09  \n",
       "6687           0.0  0.0   0.0     0.0    0.00  7.456633e+09  \n",
       "6688           0.0  0.0   0.0     0.0    0.00  7.449232e+09  \n",
       "6689           0.0  0.0   0.0     0.0    0.00  7.464049e+09  \n",
       "6690           0.0  0.0   0.0     0.0    0.00  7.456633e+09  \n",
       "6691           0.0  0.0   0.0     0.0    0.00  7.464049e+09  \n",
       "6692           0.0  0.0   0.0     0.0    0.00  7.456633e+09  \n",
       "6693           0.0  0.0   0.0     0.0    0.00  7.449232e+09  \n",
       "6694           0.0  0.0   0.0     0.0    0.00  7.464049e+09  \n",
       "6695           0.0  0.0   0.0     0.0    0.00  7.456633e+09  \n",
       "6696           0.0  0.0   0.0    10.0    0.00  7.449232e+09  \n",
       "6697           0.0  0.0   0.0     0.0    0.00  7.464049e+09  \n",
       "6698           0.0  0.0   0.0     0.0    0.00  7.456633e+09  \n",
       "6699           0.0  0.0   0.0     0.0    0.00  7.449232e+09  \n",
       "6700           0.0  0.0   0.0     0.0    0.00  7.464049e+09  \n",
       "6701           0.0  0.0   0.0     0.0  224.00  7.464049e+09  \n",
       "6702           0.0  0.0   0.0     0.0    0.00  7.464049e+09  \n",
       "6703           0.0  0.0   0.0     0.0  252.00  7.464049e+09  \n",
       "6704           0.0  0.0   0.0     0.0    0.00  7.456633e+09  \n",
       "6705           0.0  0.0   0.0     0.0    0.00  7.456633e+09  \n",
       "6706           0.0  0.0   0.0     0.0    0.00  7.464049e+09  \n",
       "6707           0.0  0.0   0.0     0.0   56.25  7.464049e+09  \n",
       "6708           0.0  0.0   0.0     0.0    0.00  7.456633e+09  \n",
       "6709           0.0  0.0   0.0     0.0    0.00  7.464049e+09  \n",
       "6710           0.0  0.0   0.0     0.0    0.00  7.456633e+09  \n",
       "6711           0.0  0.0   0.0     0.0    0.00  7.456633e+09  \n",
       "\n",
       "[6712 rows x 51 columns]"
      ]
     },
     "execution_count": 51,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "consumption=pd.read_csv(\"/home/jovyan/EEP153_Materials/Project4/consumption_final.csv\")\n",
    "consumption"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {},
   "outputs": [],
   "source": [
    "anemia=anemia.reset_index(drop=True).drop(anemia.columns[0], axis=1)\n",
    "anemia_goals=anemia_goals.reset_index(drop=True).drop(anemia_goals.columns[0], axis=1)\n",
    "anemia.columns=range(anemia.shape[1])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "metadata": {},
   "outputs": [
    {
     "ename": "IndexError",
     "evalue": "single positional indexer is out-of-bounds",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mIndexError\u001b[0m                                Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-53-14c02fec45a4>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      4\u001b[0m     \u001b[0mdiscrepancy_vector\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m     \u001b[0;32mfor\u001b[0m \u001b[0mt\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mrange\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m4\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 6\u001b[0;31m         \u001b[0mdiscrepancy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0manemia\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0miloc\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mt\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mi\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m/\u001b[0m\u001b[0manemia_goals\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0miloc\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mt\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mi\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      7\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mdiscrepancy\u001b[0m \u001b[0;34m>\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      8\u001b[0m             \u001b[0mdiscrepancy\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/srv/app/venv/lib/python3.6/site-packages/pandas/core/indexing.py\u001b[0m in \u001b[0;36m__getitem__\u001b[0;34m(self, key)\u001b[0m\n\u001b[1;32m   1470\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mKeyError\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mIndexError\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1471\u001b[0m                 \u001b[0;32mpass\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1472\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_getitem_tuple\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1473\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1474\u001b[0m             \u001b[0;31m# we by definition only have the 0th axis\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/srv/app/venv/lib/python3.6/site-packages/pandas/core/indexing.py\u001b[0m in \u001b[0;36m_getitem_tuple\u001b[0;34m(self, tup)\u001b[0m\n\u001b[1;32m   2011\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m_getitem_tuple\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtup\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2012\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2013\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_has_valid_tuple\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtup\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   2014\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2015\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_getitem_lowerdim\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtup\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/srv/app/venv/lib/python3.6/site-packages/pandas/core/indexing.py\u001b[0m in \u001b[0;36m_has_valid_tuple\u001b[0;34m(self, key)\u001b[0m\n\u001b[1;32m    220\u001b[0m                 \u001b[0;32mraise\u001b[0m \u001b[0mIndexingError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'Too many indexers'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    221\u001b[0m             \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 222\u001b[0;31m                 \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_validate_key\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mk\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mi\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    223\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mValueError\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    224\u001b[0m                 raise ValueError(\"Location based indexing can only have \"\n",
      "\u001b[0;32m/srv/app/venv/lib/python3.6/site-packages/pandas/core/indexing.py\u001b[0m in \u001b[0;36m_validate_key\u001b[0;34m(self, key, axis)\u001b[0m\n\u001b[1;32m   1955\u001b[0m             \u001b[0;32mreturn\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1956\u001b[0m         \u001b[0;32melif\u001b[0m \u001b[0mis_integer\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1957\u001b[0;31m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_validate_integer\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1958\u001b[0m         \u001b[0;32melif\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtuple\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1959\u001b[0m             \u001b[0;31m# a tuple should already have been caught by this point\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/srv/app/venv/lib/python3.6/site-packages/pandas/core/indexing.py\u001b[0m in \u001b[0;36m_validate_integer\u001b[0;34m(self, key, axis)\u001b[0m\n\u001b[1;32m   2007\u001b[0m         \u001b[0ml\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0max\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2008\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mkey\u001b[0m \u001b[0;34m>=\u001b[0m \u001b[0ml\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0mkey\u001b[0m \u001b[0;34m<\u001b[0m \u001b[0;34m-\u001b[0m\u001b[0ml\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2009\u001b[0;31m             \u001b[0;32mraise\u001b[0m \u001b[0mIndexError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"single positional indexer is out-of-bounds\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   2010\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2011\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m_getitem_tuple\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtup\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mIndexError\u001b[0m: single positional indexer is out-of-bounds"
     ]
    }
   ],
   "source": [
    "column_names=range(6712)\n",
    "anemia_fulfillment=pd.DataFrame(columns = column_names)\n",
    "for i in range(len(anemia.columns)):\n",
    "    discrepancy_vector=[]\n",
    "    for t in range(4):\n",
    "        discrepancy=anemia.iloc[t, i]/anemia_goals.iloc[t, i]\n",
    "        if discrepancy > 1:\n",
    "            discrepancy = 1\n",
    "        discrepancy_vector.append(discrepancy)\n",
    "    anemia_fulfillment[i]=discrepancy_vector"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/srv/app/venv/lib/python3.6/site-packages/ipykernel_launcher.py:26: RuntimeWarning: divide by zero encountered in double_scalars\n",
      "/srv/app/venv/lib/python3.6/site-packages/ipykernel_launcher.py:26: RuntimeWarning: invalid value encountered in double_scalars\n"
     ]
    }
   ],
   "source": [
    "#grabs nutrients related to anemia deficencies \n",
    "#Protein->Folate->Iron\n",
    "healthlist=[1, 3, 6]\n",
    "target_list=[35, 24, 5]\n",
    "\n",
    "\n",
    "anemia=health.iloc[healthlist]\n",
    "anemia_goals=target_nutrients.iloc[target_list]\n",
    "\n",
    "\n",
    "#save IDs for later\n",
    "IDs=anemia.columns[1:]\n",
    "\n",
    "#resets axes to regular indexes\n",
    "anemia=anemia.reset_index(drop=True).drop(anemia.columns[0], axis=1)\n",
    "anemia_goals=anemia_goals.reset_index(drop=True).drop(anemia_goals.columns[0], axis=1)\n",
    "anemia.columns=range(anemia.shape[1])\n",
    "\n",
    "#code to create a database that divides nutritional recommended per household over actual nutrients received\n",
    "#multiply goals by 7, its still per day dummy\n",
    "column_names=range(6712)\n",
    "anemia_fulfillment=pd.DataFrame(columns = column_names)\n",
    "for i in range(len(anemia.columns)):\n",
    "    discrepancy_vector=[]\n",
    "    for t in range(3):\n",
    "        discrepancy=anemia.iloc[t, i]/(anemia_goals.iloc[t, i]*7)\n",
    "        if discrepancy > 1:\n",
    "            discrepancy = 1\n",
    "        discrepancy_vector.append(discrepancy)\n",
    "    anemia_fulfillment[i]=discrepancy_vector\n",
    "\n",
    "\n",
    "anemia_fulfillment=anemia_fulfillment.T\n",
    "\n",
    "average_nutrition=[]\n",
    "\n",
    "for i in range(6712):\n",
    "    average=np.mean(anemia_fulfillment.loc[i])\n",
    "    average_nutrition.append(average)\n",
    "\n",
    "\n",
    "anemia_fulfillment[\"Average Nutrition\"]=average_nutrition\n",
    "anemia_fulfillment[\"Household amount\"]=number_in_house\n",
    "anemia_fulfillment[\"j\"]=consumption[\"j\"]\n",
    "anemia_fulfillment[\"t\"]=consumption[\"t\"]\n",
    "anemia_fulfillment=anemia_fulfillment.rename(columns={0:\"Protein\", 1:\"Folate\", 2:\"Iron\"})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[<matplotlib.axes._subplots.AxesSubplot object at 0x7f43fb0474e0>]],\n",
       "      dtype=object)"
      ]
     },
     "execution_count": 55,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "anemia_fulfillment.hist(column=\"Iron\", bins=50)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "metadata": {},
   "outputs": [
    {
     "ename": "AttributeError",
     "evalue": "'DataFrame' object has no attribute 'group'",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-56-29f6a3502b38>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 6\u001b[0;31m \u001b[0mIron_Protein_plotting\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0manemia_fulfillment\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mgroup\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'Iron'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'Protein'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mvalues\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'Age Adjusted Death Rate'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      7\u001b[0m \u001b[0mIron_Protein_plotting\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshow\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m5\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      8\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/srv/app/venv/lib/python3.6/site-packages/pandas/core/generic.py\u001b[0m in \u001b[0;36m__getattr__\u001b[0;34m(self, name)\u001b[0m\n\u001b[1;32m   4374\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_info_axis\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_can_hold_identifiers_and_holds_name\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mname\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4375\u001b[0m                 \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mname\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 4376\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mobject\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__getattribute__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mname\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   4377\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4378\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m__setattr__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mname\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mvalue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mAttributeError\u001b[0m: 'DataFrame' object has no attribute 'group'"
     ]
    }
   ],
   "source": [
    "# A line plot for 'Iron' and 'Household' / and 'Iron' and ''Protein\n",
    "\n",
    "# need codes for 'group()' and 'select()' to select and gather data in the data frame\n",
    "\n",
    "Iron_Protein_plotting = anemia_fulfillment.group('t')\n",
    "Iron_Protein_plotting.select('t', \"Iron\",'Protein').plot('t')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[<matplotlib.axes._subplots.AxesSubplot object at 0x7f43e44765f8>,\n",
       "        <matplotlib.axes._subplots.AxesSubplot object at 0x7f43e44387b8>],\n",
       "       [<matplotlib.axes._subplots.AxesSubplot object at 0x7f43e43e0198>,\n",
       "        <matplotlib.axes._subplots.AxesSubplot object at 0x7f43e43feb38>]],\n",
       "      dtype=object)"
      ]
     },
     "execution_count": 57,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 4 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# from datascience import *\n",
    "# import numpy as np\n",
    "# !pip install matplotlib\n",
    "# import matplotlib.pyplot \n",
    "\n",
    "import matplotlib\n",
    "matplotlib.use('Agg')\n",
    "from datascience import Table\n",
    "%matplotlib inline\n",
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "plt.style.use('fivethirtyeight')\n",
    "from tables import *\n",
    "\n",
    "\n",
    "anemia_fulfillment.hist('Household amount','t')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Overall[2011,2013,2015] HH and pervent per unit\n",
    "from datascience import Table\n",
    "\n",
    "\n",
    "hh=anemia_fulfillment['Household amount']\n",
    "protein=anemia_fulfillment['Protein']\n",
    "Iron=anemia_fulfillment['Iron']\n",
    "\n",
    "Table().with_column('Number of Household', hh).hist(bins=10)\n",
    "\n",
    "Table().with_column('Pretein', protein).hist(bins=50)\n",
    "\n",
    "Table().with_column('Iron', Iron).hist(bins=50)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "metadata": {},
   "outputs": [],
   "source": [
    "def count_range(nutrient, minimum, maximum):\n",
    "    nutrients=[\"Protein\", \"Folate\", \"Iron\", \"Vitamin B12\"]\n",
    "    for i in range(len(nutrients)):\n",
    "        if nutrients[i]==nutrient:\n",
    "            data=anemia_fulfillment.T[i]\n",
    "        #if all(nutrients[i]!=nutrient):\n",
    "            #return(\"Check Spelling\")\n",
    "    counter=0\n",
    "    for i in range(len(data)):\n",
    "        if data[i]>=minimum and data[i]<=maximum:\n",
    "            counter+=1\n",
    "    return (counter, counter/6712)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Protein</th>\n",
       "      <th>Folate</th>\n",
       "      <th>Iron</th>\n",
       "      <th>Average Nutrition</th>\n",
       "      <th>Household amount</th>\n",
       "      <th>j</th>\n",
       "      <th>t</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.004949</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.013581</td>\n",
       "      <td>0.006177</td>\n",
       "      <td>7</td>\n",
       "      <td>1.010102e+12</td>\n",
       "      <td>2011</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.344876</td>\n",
       "      <td>0.264286</td>\n",
       "      <td>0.367857</td>\n",
       "      <td>0.325673</td>\n",
       "      <td>1</td>\n",
       "      <td>1.010102e+12</td>\n",
       "      <td>2015</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.113561</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.015238</td>\n",
       "      <td>0.042933</td>\n",
       "      <td>6</td>\n",
       "      <td>1.010102e+12</td>\n",
       "      <td>2011</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.131760</td>\n",
       "      <td>0.153206</td>\n",
       "      <td>0.089011</td>\n",
       "      <td>0.124659</td>\n",
       "      <td>9</td>\n",
       "      <td>1.010102e+12</td>\n",
       "      <td>2015</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.550000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.850000</td>\n",
       "      <td>1</td>\n",
       "      <td>1.010102e+12</td>\n",
       "      <td>2011</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.621429</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.873810</td>\n",
       "      <td>1</td>\n",
       "      <td>1.010102e+12</td>\n",
       "      <td>2013</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.537975</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.845992</td>\n",
       "      <td>4</td>\n",
       "      <td>1.010102e+12</td>\n",
       "      <td>2011</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.604538</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.868179</td>\n",
       "      <td>3</td>\n",
       "      <td>1.010102e+12</td>\n",
       "      <td>2013</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.619205</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.873068</td>\n",
       "      <td>3</td>\n",
       "      <td>1.010102e+12</td>\n",
       "      <td>2015</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>0.145362</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.038156</td>\n",
       "      <td>0.061173</td>\n",
       "      <td>4</td>\n",
       "      <td>1.010102e+12</td>\n",
       "      <td>2011</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>0.695055</td>\n",
       "      <td>0.401595</td>\n",
       "      <td>0.887245</td>\n",
       "      <td>0.661298</td>\n",
       "      <td>4</td>\n",
       "      <td>1.010102e+12</td>\n",
       "      <td>2013</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>0.329933</td>\n",
       "      <td>0.431379</td>\n",
       "      <td>0.147321</td>\n",
       "      <td>0.302878</td>\n",
       "      <td>4</td>\n",
       "      <td>1.010102e+12</td>\n",
       "      <td>2011</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>0.875765</td>\n",
       "      <td>0.196259</td>\n",
       "      <td>0.164907</td>\n",
       "      <td>0.412310</td>\n",
       "      <td>4</td>\n",
       "      <td>1.010102e+12</td>\n",
       "      <td>2013</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.350076</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.783359</td>\n",
       "      <td>4</td>\n",
       "      <td>1.010102e+12</td>\n",
       "      <td>2011</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>0.231273</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.078968</td>\n",
       "      <td>0.103414</td>\n",
       "      <td>3</td>\n",
       "      <td>1.010102e+12</td>\n",
       "      <td>2011</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>0.287735</td>\n",
       "      <td>0.234336</td>\n",
       "      <td>0.184734</td>\n",
       "      <td>0.235602</td>\n",
       "      <td>5</td>\n",
       "      <td>1.010102e+12</td>\n",
       "      <td>2013</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>0.183896</td>\n",
       "      <td>0.018056</td>\n",
       "      <td>0.129052</td>\n",
       "      <td>0.110335</td>\n",
       "      <td>5</td>\n",
       "      <td>1.010102e+12</td>\n",
       "      <td>2015</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>0.109191</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.070168</td>\n",
       "      <td>0.059786</td>\n",
       "      <td>4</td>\n",
       "      <td>1.010102e+12</td>\n",
       "      <td>2011</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>0.179642</td>\n",
       "      <td>0.358255</td>\n",
       "      <td>0.202418</td>\n",
       "      <td>0.246772</td>\n",
       "      <td>6</td>\n",
       "      <td>1.010102e+12</td>\n",
       "      <td>2013</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>0.139413</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.149107</td>\n",
       "      <td>0.096173</td>\n",
       "      <td>1</td>\n",
       "      <td>1.010102e+12</td>\n",
       "      <td>2011</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>0.341406</td>\n",
       "      <td>0.117156</td>\n",
       "      <td>0.134240</td>\n",
       "      <td>0.197600</td>\n",
       "      <td>8</td>\n",
       "      <td>1.010102e+12</td>\n",
       "      <td>2013</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>2</td>\n",
       "      <td>1.010102e+12</td>\n",
       "      <td>2011</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.927324</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.975775</td>\n",
       "      <td>2</td>\n",
       "      <td>1.010102e+12</td>\n",
       "      <td>2011</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>0.161756</td>\n",
       "      <td>0.115897</td>\n",
       "      <td>0.075582</td>\n",
       "      <td>0.117745</td>\n",
       "      <td>9</td>\n",
       "      <td>1.010201e+12</td>\n",
       "      <td>2011</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>0.037555</td>\n",
       "      <td>0.008775</td>\n",
       "      <td>0.050801</td>\n",
       "      <td>0.032377</td>\n",
       "      <td>10</td>\n",
       "      <td>1.010201e+12</td>\n",
       "      <td>2013</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>0.014381</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.036921</td>\n",
       "      <td>0.017101</td>\n",
       "      <td>5</td>\n",
       "      <td>1.010201e+12</td>\n",
       "      <td>2011</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>0.010037</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.027074</td>\n",
       "      <td>0.012370</td>\n",
       "      <td>7</td>\n",
       "      <td>1.010201e+12</td>\n",
       "      <td>2013</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>0.009630</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.017857</td>\n",
       "      <td>0.009162</td>\n",
       "      <td>4</td>\n",
       "      <td>1.010201e+12</td>\n",
       "      <td>2011</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>0.012403</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.026334</td>\n",
       "      <td>0.012913</td>\n",
       "      <td>7</td>\n",
       "      <td>1.010201e+12</td>\n",
       "      <td>2013</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>0.031056</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.120536</td>\n",
       "      <td>0.050531</td>\n",
       "      <td>1</td>\n",
       "      <td>1.010201e+12</td>\n",
       "      <td>2011</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6682</th>\n",
       "      <td>0.016694</td>\n",
       "      <td>0.024402</td>\n",
       "      <td>0.020704</td>\n",
       "      <td>0.020600</td>\n",
       "      <td>7</td>\n",
       "      <td>1.501020e+13</td>\n",
       "      <td>2013</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6683</th>\n",
       "      <td>0.528061</td>\n",
       "      <td>0.530357</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.686139</td>\n",
       "      <td>2</td>\n",
       "      <td>1.501020e+13</td>\n",
       "      <td>2011</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6684</th>\n",
       "      <td>0.002486</td>\n",
       "      <td>0.014921</td>\n",
       "      <td>0.004903</td>\n",
       "      <td>0.007437</td>\n",
       "      <td>6</td>\n",
       "      <td>1.501020e+13</td>\n",
       "      <td>2011</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6685</th>\n",
       "      <td>0.016222</td>\n",
       "      <td>0.008806</td>\n",
       "      <td>0.009524</td>\n",
       "      <td>0.011517</td>\n",
       "      <td>10</td>\n",
       "      <td>1.501020e+13</td>\n",
       "      <td>2013</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6686</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>2</td>\n",
       "      <td>1.501020e+13</td>\n",
       "      <td>2011</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6687</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>2</td>\n",
       "      <td>1.501020e+13</td>\n",
       "      <td>2013</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6688</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1</td>\n",
       "      <td>1.501020e+13</td>\n",
       "      <td>2015</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6689</th>\n",
       "      <td>0.004930</td>\n",
       "      <td>0.031942</td>\n",
       "      <td>0.012190</td>\n",
       "      <td>0.016354</td>\n",
       "      <td>4</td>\n",
       "      <td>1.501020e+13</td>\n",
       "      <td>2011</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6690</th>\n",
       "      <td>0.003755</td>\n",
       "      <td>0.023677</td>\n",
       "      <td>0.008312</td>\n",
       "      <td>0.011915</td>\n",
       "      <td>5</td>\n",
       "      <td>1.501020e+13</td>\n",
       "      <td>2013</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6691</th>\n",
       "      <td>0.002277</td>\n",
       "      <td>0.015053</td>\n",
       "      <td>0.005957</td>\n",
       "      <td>0.007762</td>\n",
       "      <td>6</td>\n",
       "      <td>1.501020e+13</td>\n",
       "      <td>2011</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6692</th>\n",
       "      <td>0.005357</td>\n",
       "      <td>0.035418</td>\n",
       "      <td>0.014015</td>\n",
       "      <td>0.018263</td>\n",
       "      <td>6</td>\n",
       "      <td>1.501020e+13</td>\n",
       "      <td>2013</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6693</th>\n",
       "      <td>0.102221</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.134874</td>\n",
       "      <td>0.079032</td>\n",
       "      <td>3</td>\n",
       "      <td>1.501020e+13</td>\n",
       "      <td>2015</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6694</th>\n",
       "      <td>0.006470</td>\n",
       "      <td>0.041504</td>\n",
       "      <td>0.014454</td>\n",
       "      <td>0.020809</td>\n",
       "      <td>3</td>\n",
       "      <td>1.501020e+13</td>\n",
       "      <td>2011</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6695</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>4</td>\n",
       "      <td>1.501020e+13</td>\n",
       "      <td>2013</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6696</th>\n",
       "      <td>0.296510</td>\n",
       "      <td>0.010131</td>\n",
       "      <td>0.277204</td>\n",
       "      <td>0.194615</td>\n",
       "      <td>4</td>\n",
       "      <td>1.501020e+13</td>\n",
       "      <td>2015</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6697</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1</td>\n",
       "      <td>1.501020e+13</td>\n",
       "      <td>2011</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6698</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>2</td>\n",
       "      <td>1.501020e+13</td>\n",
       "      <td>2013</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6699</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>2</td>\n",
       "      <td>1.501020e+13</td>\n",
       "      <td>2015</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6700</th>\n",
       "      <td>0.015664</td>\n",
       "      <td>0.103697</td>\n",
       "      <td>0.034462</td>\n",
       "      <td>0.051274</td>\n",
       "      <td>2</td>\n",
       "      <td>1.501020e+13</td>\n",
       "      <td>2011</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6701</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.855258</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.951753</td>\n",
       "      <td>9</td>\n",
       "      <td>1.501020e+13</td>\n",
       "      <td>2011</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6702</th>\n",
       "      <td>0.016770</td>\n",
       "      <td>0.111255</td>\n",
       "      <td>0.042667</td>\n",
       "      <td>0.056897</td>\n",
       "      <td>4</td>\n",
       "      <td>1.501020e+13</td>\n",
       "      <td>2011</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6703</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>4</td>\n",
       "      <td>1.501020e+13</td>\n",
       "      <td>2011</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6704</th>\n",
       "      <td>0.754701</td>\n",
       "      <td>0.043619</td>\n",
       "      <td>0.365455</td>\n",
       "      <td>0.387925</td>\n",
       "      <td>4</td>\n",
       "      <td>1.501020e+13</td>\n",
       "      <td>2013</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6705</th>\n",
       "      <td>0.680812</td>\n",
       "      <td>0.071429</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.584080</td>\n",
       "      <td>2</td>\n",
       "      <td>1.501020e+13</td>\n",
       "      <td>2013</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6706</th>\n",
       "      <td>0.009825</td>\n",
       "      <td>0.059502</td>\n",
       "      <td>0.016696</td>\n",
       "      <td>0.028674</td>\n",
       "      <td>4</td>\n",
       "      <td>1.501020e+13</td>\n",
       "      <td>2011</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6707</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.405618</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.801873</td>\n",
       "      <td>6</td>\n",
       "      <td>1.501020e+13</td>\n",
       "      <td>2011</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6708</th>\n",
       "      <td>0.012189</td>\n",
       "      <td>0.018858</td>\n",
       "      <td>0.016359</td>\n",
       "      <td>0.015802</td>\n",
       "      <td>8</td>\n",
       "      <td>1.501020e+13</td>\n",
       "      <td>2013</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6709</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>2</td>\n",
       "      <td>1.501020e+13</td>\n",
       "      <td>2011</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6710</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>2</td>\n",
       "      <td>1.501020e+13</td>\n",
       "      <td>2013</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6711</th>\n",
       "      <td>0.008774</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.017419</td>\n",
       "      <td>0.008731</td>\n",
       "      <td>5</td>\n",
       "      <td>1.501020e+13</td>\n",
       "      <td>2013</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>6712 rows × 7 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       Protein    Folate      Iron  Average Nutrition  Household amount  \\\n",
       "0     0.004949  0.000000  0.013581           0.006177                 7   \n",
       "1     0.344876  0.264286  0.367857           0.325673                 1   \n",
       "2     0.113561  0.000000  0.015238           0.042933                 6   \n",
       "3     0.131760  0.153206  0.089011           0.124659                 9   \n",
       "4     1.000000  0.550000  1.000000           0.850000                 1   \n",
       "5     1.000000  0.621429  1.000000           0.873810                 1   \n",
       "6     1.000000  0.537975  1.000000           0.845992                 4   \n",
       "7     1.000000  0.604538  1.000000           0.868179                 3   \n",
       "8     1.000000  0.619205  1.000000           0.873068                 3   \n",
       "9     0.145362  0.000000  0.038156           0.061173                 4   \n",
       "10    0.695055  0.401595  0.887245           0.661298                 4   \n",
       "11    0.329933  0.431379  0.147321           0.302878                 4   \n",
       "12    0.875765  0.196259  0.164907           0.412310                 4   \n",
       "13    1.000000  0.350076  1.000000           0.783359                 4   \n",
       "14    0.231273  0.000000  0.078968           0.103414                 3   \n",
       "15    0.287735  0.234336  0.184734           0.235602                 5   \n",
       "16    0.183896  0.018056  0.129052           0.110335                 5   \n",
       "17    0.109191  0.000000  0.070168           0.059786                 4   \n",
       "18    0.179642  0.358255  0.202418           0.246772                 6   \n",
       "19    0.139413  0.000000  0.149107           0.096173                 1   \n",
       "20    0.341406  0.117156  0.134240           0.197600                 8   \n",
       "21    0.000000  0.000000  0.000000           0.000000                 2   \n",
       "22    1.000000  0.927324  1.000000           0.975775                 2   \n",
       "23    0.161756  0.115897  0.075582           0.117745                 9   \n",
       "24    0.037555  0.008775  0.050801           0.032377                10   \n",
       "25    0.014381  0.000000  0.036921           0.017101                 5   \n",
       "26    0.010037  0.000000  0.027074           0.012370                 7   \n",
       "27    0.009630  0.000000  0.017857           0.009162                 4   \n",
       "28    0.012403  0.000000  0.026334           0.012913                 7   \n",
       "29    0.031056  0.000000  0.120536           0.050531                 1   \n",
       "...        ...       ...       ...                ...               ...   \n",
       "6682  0.016694  0.024402  0.020704           0.020600                 7   \n",
       "6683  0.528061  0.530357  1.000000           0.686139                 2   \n",
       "6684  0.002486  0.014921  0.004903           0.007437                 6   \n",
       "6685  0.016222  0.008806  0.009524           0.011517                10   \n",
       "6686  0.000000  0.000000  0.000000           0.000000                 2   \n",
       "6687  0.000000  0.000000  0.000000           0.000000                 2   \n",
       "6688  0.000000  0.000000  0.000000           0.000000                 1   \n",
       "6689  0.004930  0.031942  0.012190           0.016354                 4   \n",
       "6690  0.003755  0.023677  0.008312           0.011915                 5   \n",
       "6691  0.002277  0.015053  0.005957           0.007762                 6   \n",
       "6692  0.005357  0.035418  0.014015           0.018263                 6   \n",
       "6693  0.102221  0.000000  0.134874           0.079032                 3   \n",
       "6694  0.006470  0.041504  0.014454           0.020809                 3   \n",
       "6695  0.000000  0.000000  0.000000           0.000000                 4   \n",
       "6696  0.296510  0.010131  0.277204           0.194615                 4   \n",
       "6697  0.000000  0.000000  0.000000           0.000000                 1   \n",
       "6698  0.000000  0.000000  0.000000           0.000000                 2   \n",
       "6699  0.000000  0.000000  0.000000           0.000000                 2   \n",
       "6700  0.015664  0.103697  0.034462           0.051274                 2   \n",
       "6701  1.000000  0.855258  1.000000           0.951753                 9   \n",
       "6702  0.016770  0.111255  0.042667           0.056897                 4   \n",
       "6703  1.000000  1.000000  1.000000           1.000000                 4   \n",
       "6704  0.754701  0.043619  0.365455           0.387925                 4   \n",
       "6705  0.680812  0.071429  1.000000           0.584080                 2   \n",
       "6706  0.009825  0.059502  0.016696           0.028674                 4   \n",
       "6707  1.000000  0.405618  1.000000           0.801873                 6   \n",
       "6708  0.012189  0.018858  0.016359           0.015802                 8   \n",
       "6709  0.000000  0.000000  0.000000           0.000000                 2   \n",
       "6710  0.000000  0.000000  0.000000           0.000000                 2   \n",
       "6711  0.008774  0.000000  0.017419           0.008731                 5   \n",
       "\n",
       "                 j     t  \n",
       "0     1.010102e+12  2011  \n",
       "1     1.010102e+12  2015  \n",
       "2     1.010102e+12  2011  \n",
       "3     1.010102e+12  2015  \n",
       "4     1.010102e+12  2011  \n",
       "5     1.010102e+12  2013  \n",
       "6     1.010102e+12  2011  \n",
       "7     1.010102e+12  2013  \n",
       "8     1.010102e+12  2015  \n",
       "9     1.010102e+12  2011  \n",
       "10    1.010102e+12  2013  \n",
       "11    1.010102e+12  2011  \n",
       "12    1.010102e+12  2013  \n",
       "13    1.010102e+12  2011  \n",
       "14    1.010102e+12  2011  \n",
       "15    1.010102e+12  2013  \n",
       "16    1.010102e+12  2015  \n",
       "17    1.010102e+12  2011  \n",
       "18    1.010102e+12  2013  \n",
       "19    1.010102e+12  2011  \n",
       "20    1.010102e+12  2013  \n",
       "21    1.010102e+12  2011  \n",
       "22    1.010102e+12  2011  \n",
       "23    1.010201e+12  2011  \n",
       "24    1.010201e+12  2013  \n",
       "25    1.010201e+12  2011  \n",
       "26    1.010201e+12  2013  \n",
       "27    1.010201e+12  2011  \n",
       "28    1.010201e+12  2013  \n",
       "29    1.010201e+12  2011  \n",
       "...            ...   ...  \n",
       "6682  1.501020e+13  2013  \n",
       "6683  1.501020e+13  2011  \n",
       "6684  1.501020e+13  2011  \n",
       "6685  1.501020e+13  2013  \n",
       "6686  1.501020e+13  2011  \n",
       "6687  1.501020e+13  2013  \n",
       "6688  1.501020e+13  2015  \n",
       "6689  1.501020e+13  2011  \n",
       "6690  1.501020e+13  2013  \n",
       "6691  1.501020e+13  2011  \n",
       "6692  1.501020e+13  2013  \n",
       "6693  1.501020e+13  2015  \n",
       "6694  1.501020e+13  2011  \n",
       "6695  1.501020e+13  2013  \n",
       "6696  1.501020e+13  2015  \n",
       "6697  1.501020e+13  2011  \n",
       "6698  1.501020e+13  2013  \n",
       "6699  1.501020e+13  2015  \n",
       "6700  1.501020e+13  2011  \n",
       "6701  1.501020e+13  2011  \n",
       "6702  1.501020e+13  2011  \n",
       "6703  1.501020e+13  2011  \n",
       "6704  1.501020e+13  2013  \n",
       "6705  1.501020e+13  2013  \n",
       "6706  1.501020e+13  2011  \n",
       "6707  1.501020e+13  2011  \n",
       "6708  1.501020e+13  2013  \n",
       "6709  1.501020e+13  2011  \n",
       "6710  1.501020e+13  2013  \n",
       "6711  1.501020e+13  2013  \n",
       "\n",
       "[6712 rows x 7 columns]"
      ]
     },
     "execution_count": 60,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "anemia_fulfillment"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "marker=[]\n",
    "for i in anemia_fulfillment[\"j\"]:\n",
    "    if i not in marker:\n",
    "        marker.append(i)\n",
    "\n",
    "two_times_dataframe=pd.DataFrame()\n",
    "first_obs=[]\n",
    "second_obs=[]\n",
    "time_differences=[]\n",
    "average_differences=[]\n",
    "household_0=[]\n",
    "household_1=[]\n",
    "\n",
    "for i in marker:\n",
    "    per_household=anemia_fulfillment[anemia_fulfillment[\"j\"]==i]\n",
    "    #per_household=per_household.groupby(\"t\", axis=1, descending=True)\n",
    "    time=per_household[\"t\"]\n",
    "    averages=per_household[\"Average Nutrition\"]\n",
    "    house=per_household[\"Household amount\"]\n",
    "    if len(averages)>2:\n",
    "        continue\n",
    "    if len(averages)==2:\n",
    "        house0=house.iloc[0]\n",
    "        house1=house.iloc[1]\n",
    "        first_observation=time.iloc[0]\n",
    "        second_observation=time.iloc[1]\n",
    "        time_diff=time.iloc[1]-time.iloc[0]\n",
    "        average_diff=averages.iloc[1]-averages.iloc[0]\n",
    "        time_differences.append(time_diff)\n",
    "        average_differences.append(average_diff)\n",
    "        first_obs.append(first_observation)\n",
    "        second_obs.append(second_observation)\n",
    "        household_0.append(house0)\n",
    "        household_1.append(house1)\n",
    "    \n",
    "two_times_dataframe[\"Time Difference\"]=time_differences\n",
    "two_times_dataframe[\"Average Anemic Change Per Person\"]=average_differences\n",
    "two_times_dataframe[\"Time 0\"]=first_observation\n",
    "two_times_dataframe[\"Time 1\"]=second_observation\n",
    "two_times_dataframe[\"# at time 0\"]=household_0\n",
    "two_times_dataframe[\"# at time 1\"]=household_1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "person_change=[]\n",
    "for i in range(2639):\n",
    "    p=two_times_dataframe[\"# at time 1\"][i]-two_times_dataframe[\"# at time 0\"][i]\n",
    "    person_change.append(p)\n",
    "np.mean(person_change)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#grabs nutrients related to anemia deficencies \n",
    "#Protein->Folate->Iron\n",
    "healthlist=[1, 3, 6]\n",
    "target_list=[35, 24, 5]\n",
    "\n",
    "\n",
    "anemia=health.iloc[healthlist]\n",
    "anemia_goals=target_nutrients.iloc[target_list]\n",
    "\n",
    "\n",
    "#save IDs for later\n",
    "IDs=anemia.columns[1:]\n",
    "\n",
    "#resets axes to regular indexes\n",
    "anemia=anemia.reset_index(drop=True).drop(anemia.columns[0], axis=1)\n",
    "anemia_goals=anemia_goals.reset_index(drop=True).drop(anemia_goals.columns[0], axis=1)\n",
    "anemia.columns=range(anemia.shape[1])\n",
    "\n",
    "#code to create a database that divides nutritional recommended per household over actual nutrients received\n",
    "#multiply goals by 7, its still per day dummy\n",
    "column_names=range(6712)\n",
    "anemia_fulfillment=pd.DataFrame(columns = column_names)\n",
    "for i in range(len(anemia.columns)):\n",
    "    discrepancy_vector=[]\n",
    "    for t in range(3):\n",
    "        discrepancy=anemia.iloc[t, i]/(anemia_goals.iloc[t, i]*7)\n",
    "        if discrepancy > 1:\n",
    "            discrepancy = 1\n",
    "        discrepancy_vector.append(discrepancy)\n",
    "    anemia_fulfillment[i]=discrepancy_vector\n",
    "\n",
    "\n",
    "anemia_fulfillment=anemia_fulfillment.T\n",
    "\n",
    "average_nutrition=[]\n",
    "\n",
    "for i in range(6712):\n",
    "    average=np.mean(anemia_fulfillment.loc[i])\n",
    "    average_nutrition.append(average)\n",
    "\n",
    "\n",
    "anemia_fulfillment[\"Average Nutrition\"]=average_nutrition\n",
    "anemia_fulfillment[\"Household amount\"]=number_in_house\n",
    "anemia_fulfillment[\"j\"]=consumption[\"j\"]\n",
    "anemia_fulfillment[\"t\"]=consumption[\"t\"]\n",
    "anemia_fulfillment=anemia_fulfillment.rename(columns={0:\"Protein\", 1:\"Folate\", 2:\"Iron\"})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
